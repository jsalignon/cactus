
params {
	
	///////////////////////////////////////////////////////////////
	////////////// Design files
	
	design__mrna_fastq        = 'design/mrna_fastq.tsv'
	design__atac_fastq        = 'design/atac_fastq.tsv'
	design__comparisons       = 'design/comparisons.tsv'
	design__regions_to_remove = 'design/regions_to_remove.tsv'
	design__groups            = 'design/groups.tsv'
	design__genes_to_remove   = 'design/genes_to_remove.tsv'
	
	
	///////////////////////////////////////////////////////////////
	////////////// Global parameters
	
	
	// //// chosing species among: worm (WBcel235), fly (BDGP6), mouse (GRCm38), human (GRCh38)
	// species = "worm"

	//// chosing experiment types among: atac, mRNA or both
	experiment_types = 'both'
	
	//// use a gDNA input control for ATAC-Seq analysis
	use_input_control = false
	
	//// doing or skipping analysis types
	do_saturation_curve       = true
	do_raw_peak_annotation    = true
	do_bigwig                 = true
	
	disable_all_enrichments   = false
	do_genes_self_enrichment  = true
	do_peaks_self_enrichment  = true
	do_func_anno_enrichment   = true
	do_chrom_state_enrichment = true
	do_chip_enrichment        = true
	do_motif_enrichment       = true
	
	//// saving big files or not. Options are: 'none', 'all', or 'last'
	save_fastq_type = 'none'
	save_bam_type   = 'last'
	save_bed_type   = 'last'
	save_1bp_bam    = false // options are false or true for this one
	
	
	
	///////////////////////////////////////////////////////////////
	////////////// Analysis parameters
	
	/////// 1. Preprocessing
	
	
	///// a. ATAC reads
	
	//// alignment quality
	sam_MAPQ_threshold = 30
	
	//// DeepTools 
	deeptools__binsize_bigwig_creation    = 10 // suggested parameters: 10000 for fast analysis
	deeptools__binsize_bigwig_correlation = 10000
	deeptools__nb_of_1_bp_samples         = 10000
	deeptools__normalization_method       = 'None'
	
	//// resampling
	nb_sampled_aligned_reads = 1000000
	nb_sampled_trimmed_reads = 1000000


	///// b. ATAC peaks

	//// calling MACS2 peaks
	macs2__qvalue = '5e-2'

	//// annotating MACS2 peaks
	macs2_peaks__promoter_up      = 1500
	macs2_peaks__promoter_down    = 500
	
	
	///// c. mRNA

	//// removing input control peaks
	input_control_overlap_portion = '0.2'

	//// transcripts quantification
	kallisto__fragment_len  = '180'
	kallisto__fragment_sd   = '20'
	kallisto__bootstrap     = '100'


	/////// 2. Differential abundance
	
	// calling DiffBind peaks                            // function: parameter
	diffbind__analysis_method = 'DBA_EDGER'              // dba: AnalysisMethod
	diffbind__edger_tagwise   = 'TRUE'                   // dba: edgeR$bTagwise 
	diffbind__make_grey_list  = 'FALSE'                  // dba.blacklist -> enable greylist creation 
	diffbind__min_overlap     = 1                        // dba.count: minOverlap
	diffbind__score           = 'DBA_SCORE_NORMALIZED'   // dba.count: score
	diffbind__sub_control     = 'FALSE'                  // dba.count: bSubControl
	diffbind__scale_control   = 'TRUE'                   // dba.count: bScaleControl
	diffbind__min_count       = 0                        // dba.count: minCount
	diffbind__summits         = 75                       // dba.count: summits
	diffbind__filter          = 1                        // dba.count: filter
	diffbind__normalization   = 'DBA_NORM_DEFAULT'       // dba.normalize: normalize
	diffbind__library_size    = 'DBA_LIBSIZE_BACKGROUND' // dba.normalize: library
	diffbind__background      = 'TRUE'                   // dba.normalize: background
	diffbind__design          = 'TRUE'                   // dba.contrast: design
	// hardcoded: dba.count(..., bRemoveDuplicates = F, bUseSummarizeOverlaps = F, fragmentSize = 1)
	// hardcoded: dba.analyze(..., bBlacklist = F, bGreylist = F, bReduceObjects = F)
	// see the main.nf script below the DA_ATAC__doing_differential_abundance_analysis process for details on how these default parameters were chosen

	//// annotating DiffBind peaks
	diffbind_peaks__promoter_up   = 1500
	diffbind_peaks__promoter_down = 500

	//// volcano and MA plots
	diffbind_plots__fdr_threshold = 0.05
	diffbind_plots__top_n_labels  = 15
	sleuth_plots__fdr_threshold   = 0.05
	sleuth_plots__top_n_labels    = 15
	
	//// splitting DA results in subset
	split__threshold_type   = 'FDR'  // options: 'FDR' or 'rank'
	split__threshold_values = [ 1.3 ] // rank cuttoff or -log10 FDR thresholds (here: -log10(0.05) ~= 1.3)
	split__fold_changes     = [ 'up', 'down' ] // For now this argument should not be touched. But an 'all' argument may appear in the future
	split__peak_assignment  = [ 'all', 'prom', 'distNC' ] // this argument can be any of: 'all', '8kb', '3kb', '2u1d', 'TSS', 'genProm', 'genic', 'prom' or 'distNC'

	//// filtering DA results with too few entries
	min_entries_DA_bed        = 2
	
	
	/////// 3. Enrichment
	
	//// overlap with external databases
	func_anno_databases         = ['BP', 'KEGG'] // options: BP, CC, MF, KEGG
	use_nda_as_bg_for_func_anno = 'FALSE'
	simplify_cutoff             = 0.8
	// min_entries_DA_genes_sets = 1
	chip_ontology               = 'all' // options: see the chip_ontology_groups_sizes.txt file
	motifs_test_type            = 'binomial' // options: hypergeometric (any value) or binomial
	enrichment__save_df         = true
	
	
	//// figures
	
	/// padj bins cutoffs
	padj_breaks__genes_self   = "c( 0.2, 0.05, 1e-5, 1e-20, 1e-100 )"
	padj_breaks__peaks_self   = "c( 0.2, 0.05, 1e-5, 1e-20, 1e-100 )"
	padj_breaks__func_anno    = "c( 0.2, 0.05, 1e-5, 1e-20, 1e-100 )"
	padj_breaks__chrom_states = "c( 0.2, 0.05, 1e-5, 1e-20, 1e-100 )"
	padj_breaks__CHIP         = "c( 0.2, 0.05, 1e-5, 1e-20, 1e-100 )"
	padj_breaks__motifs       = "c( 0.2, 0.05, 1e-5, 1e-20, 1e-100 )"
	
	padj_breaks = [
		genes_self:   params.padj_breaks__genes_self,
		peaks_self:   params.padj_breaks__peaks_self,
		func_anno:    params.padj_breaks__func_anno,
		chrom_states: params.padj_breaks__chrom_states,
		CHIP:         params.padj_breaks__CHIP,
		motifs:       params.padj_breaks__motifs
	]
	
	
	/// barplots
	
	// barplots_params columns: padj_threshold signed_padj add_var add_number max_characters max_terms 
	barplots_params__genes_self   = "c( 0.05, T, 'none', F, 50, 30 )"
	barplots_params__peaks_self   = "c( 0.05, T, 'none', F, 50, 30 )"
	barplots_params__func_anno    = "c( 0.05, T, 'none', F, 50, 30 )"
	barplots_params__chrom_states = "c( 0.05, T, 'none', F, 50, 30 )"
	barplots_params__CHIP         = "c( 0.05, T, 'none', F, 50, 30 )"
	barplots_params__motifs       = "c( 0.05, T, 'none', F, 50, 30 )"
	
	barplots_params = [
		genes_self:   params.barplots_params__genes_self,
		peaks_self:   params.barplots_params__peaks_self,
		func_anno:    params.barplots_params__func_anno,
		chrom_states: params.barplots_params__chrom_states,
		CHIP:         params.barplots_params__CHIP,
		motifs:       params.barplots_params__motifs
	]


	/// heatmaps

	heatmaps__seed = 38

	// heatmaps_params columns: padj_threshold signed_padj add_var add_number max_characters up_down_pattern
	heatmaps_params__genes_self   = "c( 0.05, T, 'none', T, 50, 'UUDD' )"
	heatmaps_params__peaks_self   = "c( 0.05, T, 'none', T, 50, 'UUDD' )"
	heatmaps_params__func_anno    = "c( 0.05, T, 'none', F, 50, 'UUDD' )"
	heatmaps_params__chrom_states = "c( 0.05, T, 'none', F, 50, 'UUDD' )"
	heatmaps_params__CHIP         = "c( 0.05, T, 'none', F, 50, 'UUDD' )"
	heatmaps_params__motifs       = "c( 0.05, T, 'none', F, 50, 'UUDD' )"
	
	heatmaps_params = [
		genes_self:   params.heatmaps_params__genes_self,
		peaks_self:   params.heatmaps_params__peaks_self,
		func_anno:    params.heatmaps_params__func_anno,
		chrom_states: params.heatmaps_params__chrom_states,
		CHIP:         params.heatmaps_params__CHIP,
		motifs:       params.heatmaps_params__motifs
	]
	
	
	// heatmaps_filter columns: n_total n_shared n_unique remove_similar remove_similar_n agglomeration_method, select_enriched
	heatmaps_filter__func_anno = "c( 26, 18,  8, F, 2, 'ward.D', F)"
	heatmaps_filter__CHIP      = "c( 40, 30, 10, T, 2, 'ward.D', F)"
	heatmaps_filter__motifs    = "c( 40, 30, 10, T, 2, 'ward.D', F)"
	
	heatmaps_filter = [
		genes_self:   "NULL",
		peaks_self:   "NULL",
		func_anno:    params.heatmaps_filter__func_anno,
		chrom_states: "NULL",
		CHIP:         params.heatmaps_filter__CHIP,
		motifs:       params.heatmaps_filter__motifs
	]
	
	
	
	//// tables
	
	tables__save_csv   = false
	tables__save_excel = true
	tables__v_fdr_thresholds = 'c( mRNA_detailed = 1, ATAC_detailed = 1,' +
															  'res_simple = 1, res_filter = 1, func_anno = 1,' +
																'genes_self = 1, peaks_self = 1, ' +
																'chrom_states = 1, CHIP = 1, motifs = 1' +
																')'
	excel__add_conditional_formatting = 'TRUE'
	excel__max_width = 40

}


