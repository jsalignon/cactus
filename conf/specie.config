

params {
    ref {
        'worm' {
            data = '36773603'
            data_md5sums = '8e40f60f2ea56d9ea89fb5c6d30f256d'
            test_datasets = '36732768'
            test_datasets_md5sums = '02a773854712f931cb3bfd5bccb6d85e'
            effective_genome_size = '100286401'
            genome_assembly_nickname = 'ce11'
          }
        'fly' {
            data = '36750641'
            data_md5sums = 'b764ce163e063ff894f6587250dc3ada'
            test_datasets = '36750653'
            test_datasets_md5sums = 'c7f1babaae15c15adaab85b03723845d'
            effective_genome_size = '142573017'
            genome_assembly_nickname = 'dm6'
          }
        'mouse' {
            data = '36750740'
            data_md5sums = '09bada7f571bb637626b03c5b8137155'
            test_datasets = '36773822'
            test_datasets_md5sums = '069ae8cf86f371c0cb7734f2859ed761'
            effective_genome_size = '2652783500'
            genome_assembly_nickname = 'mm10'
          }
        'human' {
            data = '36779849'
            data_md5sums = '4d5201c31035be523a6a4353659cb642'
            test_datasets = '36751242'
            test_datasets_md5sums = 'd9ee77a5fadb75fbf5181be8c53278cc'
            effective_genome_size = '2913022398'
            genome_assembly_nickname = 'hg38'
          }
        }
      }
        
params.data_file = params.refs[specie].data
params.data_md5sum =  params.refs[specie].data_md5sums
params.test_datasets_file = params.refs[specie].test_datasets
params.test_datasets_md5sum =  params.refs[specie].test_datasets_md5sums
params.effective_genome_size =  params.refs[specie].effective_genome_size
params.genome_assembly_nickname =  params.refs[specie].genome_assembly_nickname
  
params.download_test_datasets = params.test_dataset ? true : false

/// Effective genome size
// https://test-argparse-readoc.readthedocs.io/en/latest/content/feature/effectiveGenomeSize.html
// https://deeptools.readthedocs.io/en/develop/content/feature/effectiveGenomeSize.html
// => same as the mappable genome size used by macs2

specie_dir = "${params.data_dir}/${specie}"
genome_dir = "${specie_dir}/genome/sequence"
anno_dir   = "${specie_dir}/genome/annotation"

params{
  effective_genome_size  = params.effective_genome_size
  bowtie2_indexes_contam = "${specie_dir}/bowtie2_indexes_conta/genome_contamination"
  
  bowtie2_indexes        = "${genome_dir}/bowtie2_indexes/genome"
  kallisto_transcriptome = "${genome_dir}/transcriptome_kallisto_index"
  
  chromosomes_sizes      = "${anno_dir}/filtered/chromosomes_sizes.txt"
  blacklisted_regions    = "${anno_dir}/blacklisted_regions.bed"
  bed_regions            = "${anno_dir}/bed_regions"
  
  org_db                 = "${anno_dir}/R/orgdb.sqlite"
  txdb                   = "${anno_dir}/R/txdb.sqlite"
  cur_seqinfo            = "${anno_dir}/R/seqinfo.rds"
  df_genes_metadata      = "${anno_dir}/R/df_genes_metadata.rds"
  df_genes_transcripts   = "${anno_dir}/R/df_genes_transcripts.rds"
  promoters_df           = "${anno_dir}/R/promoters_df.rds"
  kegg_environment       = "${anno_dir}/R/kegg_environment.rds"
  promoters_bed          = "${anno_dir}/R/promoters.bed"
  
  pwms_motifs            = "${specie_dir}/homer_data/homer_motifs.txt"
  homer_genome           = "${specie_dir}/homer_data/genomes/${params.genome_assembly_nickname}"
  encode_chip_files      = "${specie_dir}/CHIP"
  chip_ontology_groups   = "${specie_dir}/CHIP/chip_ontology_groups.tsv"
  chromatin_state_1      = "${specie_dir}/chromatin_states/${params.chromatin_state}"
}

// note: the parameter "params.chromatin_state" should be defined in the run.config file
